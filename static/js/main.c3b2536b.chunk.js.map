{"version":3,"sources":["Component/ContactForm.js","Component/ContactListItem.js","Component/ContactList.js","Component/Filter.js","App.js","index.js"],"names":["ContactForm","state","name","number","handelcklick","e","target","value","setState","handelsubmit","preventDefault","props","onAddContact","this","onSubmit","onChange","type","Component","ContactListItem","el","delCont","onClick","ContactList","contacts","deleteContact","map","contact","key","id","Filter","handleChangeFilter","filter","App","addContact","find","alert","uuidv4","prevState","event","persist","filteredContact","toLowerCase","includes","contactid","serchname","length","ReactDOM","render","document","getElementById"],"mappings":"2TAEqBA,E,4MACnBC,MAAQ,CACNC,KAAM,GACNC,OAAQ,I,EAGVC,aAAe,SAAAC,GAAM,IAAD,EACMA,EAAEC,OAAlBJ,EADU,EACVA,KAAMK,EADI,EACJA,MAEd,EAAKC,SAAL,eAAiBN,EAAOK,K,EAG1BE,aAAe,SAAAJ,GACbA,EAAEK,iBAEF,EAAKC,MAAMC,aAAa,EAAKX,MAAMC,KAAM,EAAKD,MAAME,QACpD,EAAKK,SAAS,CAAEN,KAAM,GAAIC,OAAQ,M,uDAG1B,IAAD,EACkBU,KAAKZ,MAAtBC,EADD,EACCA,KAAMC,EADP,EACOA,OACd,OACE,0BAAMW,SAAUD,KAAKJ,cACnB,sCAEE,6BACA,2BAAOM,SAAUF,KAAKT,aAAcF,KAAK,OAAOK,MAAOL,KAEzD,6BACA,wCAEE,6BACA,2BAAOa,SAAUF,KAAKT,aAAcF,KAAK,SAASK,MAAOJ,KAE3D,6BACA,4BAAQa,KAAK,UAAb,sB,GAnCiCC,aCO1BC,EAPS,SAAC,GAAD,IAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,QAAP,OACtB,4BACGD,EAAGjB,KADN,KACciB,EAAGhB,OACf,4BAAQkB,QAASD,GAAjB,YCYWE,EAdK,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAUC,EAAb,EAAaA,cAAb,OAClB,iCACE,4BACGD,EAASE,KAAI,SAAAC,GAAO,OACnB,kBAAC,EAAD,CACEC,IAAKD,EAAQE,GACbT,GAAIO,EACJN,QAAS,kBAAMI,EAAcE,EAAQE,aCShCC,EAhBF,SAAC,GAAoC,IAAlCC,EAAiC,EAAjCA,mBAAoBC,EAAa,EAAbA,OAClC,OACE,iCACE,uDAEE,2BACEhB,SAAUe,EACVvB,MAAOwB,EACP7B,KAAK,SACLc,KAAK,Y,QCmEAgB,E,4MArEb/B,MAAQ,CACNsB,SAAU,GACVQ,OAAQ,I,EAGVE,WAAa,SAAC/B,EAAMC,GAClB,GAAI,EAAKF,MAAMsB,SAASW,MAAK,SAAAR,GAAO,OAAIxB,IAASwB,EAAQxB,QACvDiC,MAAMjC,EAAO,+BADf,CAKA,IAAMwB,EAAU,CACdE,GAAIQ,eACJlC,OACAC,UAGF,EAAKK,UAAS,SAAA6B,GACZ,MAAO,CACLd,SAAS,GAAD,mBAAMc,EAAUd,UAAhB,CAA0BG,U,EAKxCI,mBAAqB,SAAAQ,GACnBA,EAAMC,UACN,EAAK/B,UAAS,WACZ,MAAO,CAAEuB,OAAQO,EAAMhC,OAAOC,W,EAIlCiC,gBAAkB,WAAO,IAAD,EACO,EAAKvC,MAA1BsB,EADc,EACdA,SAAUQ,EADI,EACJA,OAClB,OAAOR,EAASQ,QAAO,SAAAR,GAAQ,OAC7BA,EAASrB,KAAKuC,cAAcC,SAASX,EAAOU,mB,EAIhDjB,cAAgB,SAAAmB,GACd,EAAKnC,UAAS,WACZ,MAAO,CACLe,SAAU,EAAKtB,MAAMsB,SAASQ,QAC5B,SAAAa,GAAS,OAAIA,EAAUhB,KAAOe,U,uDAMpC,OACE,6BACE,yCACA,kBAAC,EAAD,CAAa/B,aAAcC,KAAKoB,aAEhC,wCACCpB,KAAKZ,MAAMsB,SAASsB,OAAS,GAC5B,kBAAC,EAAD,CACEf,mBAAoBjB,KAAKiB,mBACzBC,OAAQlB,KAAKZ,MAAM8B,SAGvB,kBAAC,EAAD,CACER,SAAUV,KAAK2B,kBACfhB,cAAeX,KAAKW,qB,GA/DZP,a,MCJlB6B,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.c3b2536b.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nexport default class ContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  handelcklick = e => {\r\n    const { name, value } = e.target;\r\n\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handelsubmit = e => {\r\n    e.preventDefault();\r\n\r\n    this.props.onAddContact(this.state.name, this.state.number);\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <form onSubmit={this.handelsubmit}>\r\n        <label>\r\n          Name\r\n          <br />\r\n          <input onChange={this.handelcklick} name=\"name\" value={name} />\r\n        </label>\r\n        <br />\r\n        <label>\r\n          Number\r\n          <br />\r\n          <input onChange={this.handelcklick} name=\"number\" value={number} />\r\n        </label>\r\n        <br />\r\n        <button type=\"submit\"> Add contact </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\n\r\nconst ContactListItem = ({ el, delCont }) => (\r\n  <li>\r\n    {el.name}: {el.number}\r\n    <button onClick={delCont}>Delete</button>\r\n  </li>\r\n);\r\n\r\nexport default ContactListItem;\r\n","import React from 'react';\r\nimport ContactListItem from './ContactListItem';\r\nimport PropTypes from 'prop-types';\r\nconst ContactList = ({ contacts, deleteContact }) => (\r\n  <section>\r\n    <ul>\r\n      {contacts.map(contact => (\r\n        <ContactListItem\r\n          key={contact.id}\r\n          el={contact}\r\n          delCont={() => deleteContact(contact.id)}\r\n        />\r\n      ))}\r\n    </ul>\r\n  </section>\r\n);\r\n\r\nexport default ContactList;\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.array.isRequired,\r\n  deleteContact: PropTypes.func.isRequired,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nlet Filter = ({ handleChangeFilter, filter }) => {\r\n  return (\r\n    <section>\r\n      <label>\r\n        Find contacts by name\r\n        <input\r\n          onChange={handleChangeFilter}\r\n          value={filter}\r\n          name=\"filter\"\r\n          type=\"text\"\r\n        />\r\n      </label>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n\r\nFilter.propTypes = {\r\n  handleChangeFilter: PropTypes.func,\r\n  filter: PropTypes.string,\r\n};\r\n","import React, { Component } from 'react';\nimport './App.css';\n\nimport ContactForm from './Component/ContactForm';\nimport ContactList from './Component/ContactList';\nimport Filter from './Component/Filter';\n\nimport { v4 as uuidv4 } from 'uuid';\n\nclass App extends Component {\n  state = {\n    contacts: [],\n    filter: '',\n  };\n\n  addContact = (name, number) => {\n    if (this.state.contacts.find(contact => name === contact.name)) {\n      alert(name + ' is already in contacts');\n      return;\n    }\n\n    const contact = {\n      id: uuidv4(),\n      name,\n      number,\n    };\n\n    this.setState(prevState => {\n      return {\n        contacts: [...prevState.contacts, contact],\n      };\n    });\n  };\n\n  handleChangeFilter = event => {\n    event.persist();\n    this.setState(() => {\n      return { filter: event.target.value };\n    });\n  };\n\n  filteredContact = () => {\n    const { contacts, filter } = this.state;\n    return contacts.filter(contacts =>\n      contacts.name.toLowerCase().includes(filter.toLowerCase()),\n    );\n  };\n\n  deleteContact = contactid => {\n    this.setState(() => {\n      return {\n        contacts: this.state.contacts.filter(\n          serchname => serchname.id !== contactid,\n        ),\n      };\n    });\n  };\n  render() {\n    return (\n      <div>\n        <h1>Phonebook</h1>\n        <ContactForm onAddContact={this.addContact} />\n\n        <h2>Contacts</h2>\n        {this.state.contacts.length > 1 && (\n          <Filter\n            handleChangeFilter={this.handleChangeFilter}\n            filter={this.state.filter}\n          />\n        )}\n        <ContactList\n          contacts={this.filteredContact()}\n          deleteContact={this.deleteContact}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}